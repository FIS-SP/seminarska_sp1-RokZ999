{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\SP1_project\\\\SP1_project\\\\frontend\\\\src\\\\components\\\\ListItem.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet getTimestamp = note => {\n  return new Date(note.__updatedtime__).toLocaleDateString();\n};\n\nlet trimmedContent = note => {\n  let content = note.body;\n\n  if (content.length > 45) {\n    return content.slice(0, 45) + '...';\n  } else {\n    return content;\n  }\n};\n\nconst ListItem = _ref => {\n  let {\n    note\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/${note.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: trimmedContent(note)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getTimestamp(note)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListItem;\nexport default ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","Link","getTimestamp","note","Date","__updatedtime__","toLocaleDateString","trimmedContent","content","body","length","slice","ListItem","id"],"sources":["C:/Users/Administrator/Desktop/SP1_project/SP1_project/frontend/src/components/ListItem.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nlet getTimestamp = (note) => {\n  return new Date(note.__updatedtime__).toLocaleDateString()\n}\n\nlet trimmedContent = (note) => {\n      let content = note.body\n\n      if (content.length > 45) {\n        return content.slice(0, 45) + '...'\n      } else {\n          return content\n      }\n}\n\nconst ListItem = ({note}) => {\n  return (\n    <Link to={`/${note.id}`}>\n      <div className=\"notes-list-item\">\n        <h3>{trimmedContent(note)}</h3>\n        <p><span>{getTimestamp(note)}</span></p>\n      </div>\n    </Link>\n  )\n}\n\nexport default ListItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,IAAIC,YAAY,GAAIC,IAAD,IAAU;EAC3B,OAAO,IAAIC,IAAJ,CAASD,IAAI,CAACE,eAAd,EAA+BC,kBAA/B,EAAP;AACD,CAFD;;AAIA,IAAIC,cAAc,GAAIJ,IAAD,IAAU;EACzB,IAAIK,OAAO,GAAGL,IAAI,CAACM,IAAnB;;EAEA,IAAID,OAAO,CAACE,MAAR,GAAiB,EAArB,EAAyB;IACvB,OAAOF,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiB,EAAjB,IAAuB,KAA9B;EACD,CAFD,MAEO;IACH,OAAOH,OAAP;EACH;AACN,CARD;;AAUA,MAAMI,QAAQ,GAAG,QAAY;EAAA,IAAX;IAACT;EAAD,CAAW;EAC3B,oBACE,QAAC,IAAD;IAAM,EAAE,EAAG,IAAGA,IAAI,CAACU,EAAG,EAAtB;IAAA,uBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACE;QAAA,UAAKN,cAAc,CAACJ,IAAD;MAAnB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,uBAAG;UAAA,UAAOD,YAAY,CAACC,IAAD;QAAnB;UAAA;UAAA;UAAA;QAAA;MAAH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CATD;;KAAMS,Q;AAWN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}